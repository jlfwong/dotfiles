[user]
  name = Jamie Wong
  email = jamie.lf.wong@gmail.com

[color]
  branch = auto
  diff = auto
  status = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[alias]
  co = checkout
  ci = commit
  lg = log --graph --pretty=format:'%Cred%h%Creset %Creset%Cblue%an%Creset %s %Cgreen(%cr)%Cred%d%Creset' --abbrev-commit --date=relative
  lga = "!git lg --all"
  amend = commit --amend
  gg = grep -A5 -B5 --color -n
  cp = cherry-pick
  f = fetch
  ire = rebase -i
  s = status
  ds = diff --cached
  dw = diff --ignore-space-change
  pd = diff --patience
  pr = pull --rebase
  wip = commit -m 'wip'
  sync = "!f() { branch=$(git name-rev --name-only HEAD); echo Syncing $branch with master && git checkout master && git pull --ff-only && git checkout $branch && git rebase master && git submodule update --init --recursive; }; f"
  outgoing = log origin/master..HEAD
  incoming = "!git fetch $1; git log HEAD..$1/master"
  su = submodule update --init --recursive

[core]
  editor = /usr/bin/vim
  excludesfile = ~/.gitignore_global

[merge]
  tool = vimdiff
  stat = true

[diff]
  # Use mnemonic prefixes (index, work tree, commit, object) instead of the standard a and b notation
  mnemonicprefix = true

  # Detect renames as well as copies
  renames = copies

[difftool]
  prompt = false

[push]
  default = simple

[branch]
  # autosetupmerge auto-adds the --track flag to each git branch,
  # which is helpful for arc (part of Phabricator).  autosetuprebase
  # means that instead of merging it will rebase.  Weird you need both!
  autosetupmerge = always
  autosetuprebase = always

[grep]
  extendRegexp = true
