// Place your key bindings in this file to overwrite the defaults
[
  { "key": "ctrl+h", "command": "workbench.action.navigateBack" },
  { "key": "ctrl+l", "command": "workbench.action.navigateForward" },
  { "key": "ctrl+g ctrl+g", "command": "editor.action.goToDeclaration" },
  { "key": "ctrl+g g", "command": "editor.action.goToDeclaration" },
  {
    "key": "ctrl+g u",
    "command": "editor.action.referenceSearch.trigger"
  },
  {
    "key": "shift+cmd+r",
    "command": "aipopup.action.modal.generate",
    "when": "editorFocus"
  },
  {
    "key": "cmd+k",
    "command": "-aipopup.action.modal.generate",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+k",
    "command": "-aipopup.action.modal.generate",
    "when": "editorFocus"
  },
  {
    "key": "cmd+r",
    "command": "cursorai.action.generateInTerminal",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+k",
    "command": "-cursorai.action.generateInTerminal",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "j",
    "command": "-notebook.focusNextEditor",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "key": "k",
    "command": "-notebook.focusPreviousEditor",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "key": "d d",
    "command": "-notebook.cell.delete",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  }
]
